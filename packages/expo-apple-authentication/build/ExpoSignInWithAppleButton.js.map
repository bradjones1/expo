{"version":3,"file":"ExpoSignInWithAppleButton.js","sourceRoot":"","sources":["../src/ExpoSignInWithAppleButton.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,oCAAoC,EACpC,2CAA2C,EAC3C,oCAAoC,EACpC,sCAAsC,EACtC,6CAA6C,EAC7C,sCAAsC,GACvC,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAEL,0BAA0B,EAC1B,yBAAyB,GAC1B,MAAM,iCAAiC,CAAC;AAEzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,MAAM,yBAAyB,GAAwD,CAAC,KAAK,EAAE,EAAE;IAC/F,IAAI,CAAC,oCAAoC,EAAE;QACzC,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAA;SAChE;QACD,OAAO,IAAI,CAAC;KACb;IAED,MAAM,EACJ,OAAO,EACP,WAAW,EACX,UAAU,EACV,GAAG,SAAS,EACb,GAAG,KAAK,CAAC;IAEV,MAAM,8BAA8B,GAAG,qBAAqB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAEtF,OAAO,CACL,CAAC,8BAA8B,CAC7B,aAAa,CAAC,CAAC,OAAO,CAAC,CACvB,IAAI,SAAS,CAAC,EACd,CACH,CAAC;AACJ,CAAC,CAAA;AAED,MAAM,gBAAgB,GAAgE;IACpF,CAAC,yBAAyB,CAAC,MAAM,CAAC,EAAE;QAClC,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE,oCAAoC;QACxE,CAAC,0BAA0B,CAAC,YAAY,CAAC,EAAE,2CAA2C;QACtF,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE,oCAAoC;KACzE;IACD,CAAC,yBAAyB,CAAC,QAAQ,CAAC,EAAE;QACpC,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE,sCAAsC;QAC1E,CAAC,0BAA0B,CAAC,YAAY,CAAC,EAAE,6CAA6C;QACxF,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE,sCAAsC;KAC3E;CACF,CAAC;AAEF,SAAS,qBAAqB,CAAC,IAA+B,EAAE,KAAiC;IAC/F,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACvC,CAAC;AAED,eAAe,yBAAyB,CAAA","sourcesContent":["import React from 'react';\nimport {\n  ExpoSignInWithAppleButtonSignInWhite,\n  ExpoSignInWithAppleButtonSignInWhiteOutline,\n  ExpoSignInWithAppleButtonSignInBlack,\n  ExpoSignInWithAppleButtonContinueWhite,\n  ExpoSignInWithAppleButtonContinueWhiteOutline,\n  ExpoSignInWithAppleButtonContinueBlack,\n} from './ExpoSignInWithAppleButtonNativeViews';\nimport {\n  SignInWithAppleButtonProps,\n  SignInWithAppleButtonStyle,\n  SignInWithAppleButtonType,\n} from './ExpoAppleAuthentication.types';\n\n/**\n * This component displays the \"Sign In with Apple\" button on your screen.\n * The App Store Guidelines require you to use this component to start the sign in process instead of a custom button.\n * You can customise the design of the button using the properties.\n * You should start the sign in process when the `onPress` property is called.\n *\n * You should only attempt to render this if `SignInWithApple.isAvailableAsync()` resolves to true.\n * This component will render nothing if it is not available and you will get a warning in `__DEV__ === true`.\n *\n * The properties of this component extends from `View`, however, you should not attempt to restyle the background color\n * or border radius with the style property.\n * This will not work and is against the App Store Guidelines.\n *\n * The additionally accepted properites are described in `SignInWithAppleButtonProps`.\n *\n * @see [Apple Documention](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton) for more details.\n *\n * @example\n * ```ts\n * import { SignInWithAppleButton, SignInWithAppleButtonType, SignInWithAppleButtonStyle } from 'expo-apple-authentication';\n *\n * function YourComponent() {\n *   return (\n *     <SignInWithAppleButton\n *       buttonType={SignInWithAppleButtonType.Default}\n *       buttonStyle={SignInWithAppleButtonStyle.Black}\n *       cornerRadus={5}\n *       onPress={() => {\n *         // Start the sign in process\n *       }}\n *     />\n *   );\n * }\n * ```\n */\nconst ExpoSignInWithAppleButton: React.FunctionComponent<SignInWithAppleButtonProps> = (props) => {\n  if (!ExpoSignInWithAppleButtonSignInWhite) {\n    if (__DEV__) {\n      console.warn('\\'ExpoSignInWithAppleButton\\' is not available.')\n    }\n    return null;\n  }\n\n  const {\n    onPress,\n    buttonStyle,\n    buttonType,\n    ...restProps\n  } = props;\n\n  const SignInWithAppleButtonComponent = selectButtonComponent(buttonType, buttonStyle);\n\n  return (\n    <SignInWithAppleButtonComponent\n      onButtonPress={onPress}\n      {...restProps}\n    />\n  );\n}\n\nconst ButtonComponents: { [type : number]: { [style: number]: React.ElementType } } = {\n  [SignInWithAppleButtonType.SignIn]: {\n    [SignInWithAppleButtonStyle.White]: ExpoSignInWithAppleButtonSignInWhite,\n    [SignInWithAppleButtonStyle.WhiteOutline]: ExpoSignInWithAppleButtonSignInWhiteOutline,\n    [SignInWithAppleButtonStyle.Black]: ExpoSignInWithAppleButtonSignInBlack,\n  },\n  [SignInWithAppleButtonType.Continue]: {\n    [SignInWithAppleButtonStyle.White]: ExpoSignInWithAppleButtonContinueWhite,\n    [SignInWithAppleButtonStyle.WhiteOutline]: ExpoSignInWithAppleButtonContinueWhiteOutline,\n    [SignInWithAppleButtonStyle.Black]: ExpoSignInWithAppleButtonContinueBlack,\n  },\n};\n\nfunction selectButtonComponent(type: SignInWithAppleButtonType, style: SignInWithAppleButtonStyle): React.ElementType {\n  return ButtonComponents[type][style];\n}\n\nexport default ExpoSignInWithAppleButton\n"]}